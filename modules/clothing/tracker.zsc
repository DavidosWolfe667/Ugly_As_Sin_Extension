class UaS_Clothing_Handler : HDWeapon {
	int basepocketspace; property BasePocketSpace: basepocketspace;
	string heldclothing;
	array<name> wornclothing;

	default {
		UaS_Clothing_Handler.BasePocketSpace 10;
	}

	override void DoEffect() {
		if (!owner) { return; }

		CheckHeldClothing();
		DisplayStatus();

		//if (level.time % 35 == 1) { console.printf(""..owner.maxpocketspace); }
	}

	void CheckHeldClothing() {
		HDPlayerPawn owner = HDPlayerPawn(owner);
		heldclothing = "";

		for (let invprobe = owner.inv; invprobe != NULL; invprobe = invprobe.inv) {
			if (invprobe is 'UaS_Clothing') {
				let founditem = UaS_Clothing(invprobe);
				heldclothing = heldclothing..founditem.nicename.." ";
				heldclothing = heldclothing.."x"..founditem.amount.."\n";
			}
		}
		//owner.maxpocketspace = basepocketspace + extrapocketspace;
	}

	void DisplayStatus() {
		if (!owner.player.ReadyWeapon) { return; }
		if (!(owner.player.ReadyWeapon is 'UaS_Clothing_Handler')) { return; }
		string message = "\cjCLOTHING\c-\n\n\n";
		message = message.."Available\n"..heldclothing;
		A_WeaponMessage(message);
	}
}

extend class UaS_Scarcity_Handler {
	//Remover function which counts all of an item then only removes a set percentage
	void ExactScarcity(name checkClass, double targetPercent) {
		array<Actor> thingArray;
		Actor nextThing;
		let thingCounter = ThinkerIterator.Create(CheckClass, Thinker.STAT_DEFAULT);
		while(nextThing = Actor(thingCounter.Next(true))) {
			if(nextThing.GetClassName() == CheckClass) { thingArray.Push(nextThing); }
		}

		int originalcount = thingArray.Size();

		int targetAmount = thingArray.Size() * targetPercent;
		while(thingArray.Size() > targetAmount) {
			if(UaS_Debug & Scarcity) { console.printf("Modified or removed "..checkClass); }
			int index = random(0, thingArray.Size()-1);
			//actor mo = thingArray[index];
			DoReplacement(thingArray[index]);
			thingArray[index].destroy();
			thingArray.Delete(index);
		}

		if(UaS_Debug & Scarcity) { console.printf(checkClass.." %i, %i, %i", originalcount, ThingArray.Size(), targetAmount); }
		thingArray.Clear();
	}
}

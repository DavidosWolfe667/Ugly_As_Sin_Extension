extend class UaS_Scarcity_Handler {
	//Generic function for breaking/replacing map-spawned magazines
	void MagReplacer(name MagName, name ammoName, int MagCap, actor spawnPointer) {
		int rounds, packed;
		MagCap = int(MagCap * min(OverspawnFactor - ScarcityFactor, 1.0)); //Possible spawn at least *some* ammo, based on overspawn
		rounds = random(0, MagCap); //Pick a number up to cap
		//Pack some in a mag, or no mag at all
		if(UaS.RandomChance(UaS_ScarcityOverspawn)) {
			packed = randompick(0, random(1, rounds)); //50%: pack none (spawn empty), or up to all
			rounds -= packed;
			HDMagAmmo.SpawnMag(spawnPointer, MagName, packed);
		}
		//spill the rest on the ground
		if (ammoName != "None") { UaS.SpawnStuff(ammoName, rounds, spawnPointer.pos); }
	}

	//Generic function for reducing amount in map-spawned ammo boxes, without removal since boxes are already rare
	void BoxReplacer(name BoxName, name ammoName, int BoxCap, actor spawnPointer) {
		int rounds, packed;
		BoxCap = int(BoxCap * min(OverspawnFactor - ScarcityFactor, 1.0)); //Possible spawn at least *some* ammo, based on overspawn
		rounds = random(int(BoxCap * 0.5), BoxCap); //Pick a number from 50% up to cap
		//Pack some in a box or no box at all
		if(UaS.RandomChance(UaS_ScarcityOverspawn)) {
			packed = randompick(0, random(1, rounds)); //50%: pack none (spawn empty), or up to all
			rounds -= packed;
			let spawnedBox = hdupk(actor.Spawn(BoxName, spawnPointer.pos));
			hdupk(spawnedBox).amount = packed;
		}
		//spill the rest on the ground
		UaS.SpawnStuff(ammoName, rounds, spawnPointer.pos);
	}
}

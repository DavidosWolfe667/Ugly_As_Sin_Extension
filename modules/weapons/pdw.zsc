class UaS_ZM66K : ZM66AssaultRifle {
	default {
		//$Category "Weapons/Hideous Destructor"
		//$Title "PDW"
		//$Sprite "UPDWA0"
		obituary "%o was perforated by %k's PDW.";
		weapon.selectionorder 24;
		weapon.slotnumber 2;
		weapon.kickback 30;
		weapon.bobrangex 0.3;
		weapon.bobrangey 0.6;
		weapon.bobspeed 2.5;
		scale 0.7;
		inventory.pickupmessage "You got the ZM66K PDW!";
		hdweapon.refid UAS_HDLD_PDW;
		hdweapon.nicename "ZM66K PDW";
		hdweapon.fitsinbackpack true;
	}

	override double gunmass(){
		return 4.0+weaponstatus[ZM66S_MAG]*0.02;
	}

	override void tick() {
		sprite = GetSpriteIndex('UPDW');
		super.tick();
		sprite = GetSpriteIndex('UPDW');
	}

	override double weaponbulk(){
		double blx=70;
		int mgg=weaponstatus[ZM66S_MAG];
		return blx+(mgg<0?0:(ENC_426MAG_LOADED+mgg*ENC_426_LOADED));
	}

	override void postbeginplay() {
		super.PostBeginPlay();
		barrellength=13;
		barrelwidth=1;
		barreldepth=2;
		weaponstatus[0]&=~(ZM66F_GLMODE|ZM66F_GRENADELOADED);
		weaponstatus[0]|=ZM66F_NOLAUNCHER;
		if(owner&&owner.player){
			weaponstatus[ZM66S_AUTO]=
				clamp(cvar.getcvar("hd_zmfiremode",owner.player).getint(),0,1);
			if(!(weaponstatus[0]&ZM66F_CHAMBER)){
				weaponstatus[0]|=ZM66F_CHAMBER;
				if(weaponstatus[ZM66S_MAG]==51)weaponstatus[ZM66S_MAG]=49;
					else weaponstatus[ZM66S_MAG]--;
			}
		}
	}

	override void DrawSightPicture(
		HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl,
		bool sightbob,vector2 bob,double fov,bool scopeview,actor hpc,string whichdot
	){
		int scaledyoffset=47;
		if(hdw.weaponstatus[0]&ZM66F_GLMODE)sb.drawgrenadeladder(hdw.airburst,bob);
		else{
			double dotoff=max(abs(bob.x),abs(bob.y));
			if(dotoff<20){
				sb.drawimage(
					whichdot,(0,0)+bob*1.6,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER,
					alpha:0.8-dotoff*0.04
				);
			}
			sb.drawimage(
				"riflsite",(0,0)+bob,sb.DI_SCREEN_CENTER|sb.DI_ITEM_CENTER
			);
		}
	}

	states {
		spawn:
			UPDW A 0;
			UPDW B 0;
			UPDF A 0;
			UPDW Q -1 nodelay{
				if(invoker.weaponstatus[ZM66S_MAG]<0)frame=15;
			}

		firemode:
			RIFG A 1{
				if(invoker.weaponstatus[ZM66S_AUTO]>=1)invoker.weaponstatus[ZM66S_AUTO]=0;
				else invoker.weaponstatus[ZM66S_AUTO]++;
				A_WeaponReady(WRF_NONE);
			}goto nope;


		fire:
			RIFG A 2{
				if(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GLMODE)setweaponstate("firefrag");
				else if(invoker.weaponstatus[ZM66S_AUTO])A_SetTics(3);
			}goto shootgun;
		hold:
			RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_GLMODE,"FireFrag");
			RIFG A 0 A_JumpIf(invoker.weaponstatus[0]&ZM66F_NOFIRESELECT,"nope");
			RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_AUTO]>4,"nope");
			RIFG A 0 A_JumpIf(invoker.weaponstatus[ZM66S_AUTO],"shootgun");
		althold:
			---- A 1{
				if(
					invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF
					&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
					&&invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER
				)setweaponstate("cookoff");
				else A_WeaponReady(WRF_NOFIRE);
			}
			---- A 0 A_Refire();
			goto ready;
		jam:
			RIFG B 1 offset(-1,36){
				A_PlaySound("weapons/riflejam",CHAN_WEAPON);
				invoker.weaponstatus[0]|=ZM66F_CHAMBERBROKEN;
				invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
			}
			RIFG B 1 offset(1,30) A_PlaySound("weapons/riflejam",6);
			goto nope;

		shootgun:
			RIFG A 1{
				if(
					//can neither shoot nor chamber
					invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN
					||(
						!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER)
						&&invoker.weaponstatus[ZM66S_MAG]<1
					)
				){
					setweaponstate("nope");
				}else if(!(invoker.weaponstatus[ZM66S_FLAGS]&ZM66F_CHAMBER)){
					//no shot but can chamber
					setweaponstate("chamber_premanual");
				}else{
					A_GunFlash();
					A_WeaponReady(WRF_NONE);
					if(invoker.weaponstatus[ZM66S_AUTO]>=2)invoker.weaponstatus[ZM66S_AUTO]++;
				}
			}
		chamber:
			RIFG B 1 offset(0,32){
				if(invoker.weaponstatus[ZM66S_MAG]<1){
					setweaponstate("nope");
					return;
				}
				if(brokenround()){
					setweaponstate("jam");
					return;
				}
				if(invoker.weaponstatus[ZM66S_MAG]%100>0){
					if(invoker.weaponstatus[ZM66S_MAG]==51)invoker.weaponstatus[ZM66S_MAG]=50;
					invoker.weaponstatus[ZM66S_MAG]--;
					invoker.weaponstatus[ZM66S_FLAGS]|=ZM66F_CHAMBER;
				}else{
					invoker.weaponstatus[ZM66S_MAG]=min(invoker.weaponstatus[ZM66S_MAG],0);
					A_PlaySound("weapons/rifchamber",5);
				}
				if(!invoker.weaponstatus[ZM66S_AUTO])A_SetTics(1);
				else if(invoker.weaponstatus[ZM66S_AUTO]>1)A_SetTics(0);
				A_WeaponReady(WRF_NOFIRE); //not WRF_NONE: switch to drop during cookoff
			}
			RIFG B 0 A_JumpIf(
				invoker.weaponstatus[ZM66S_HEAT]>HDCONST_ZM66COOKOFF
				&&invoker.weaponstatus[0]&ZM66F_CHAMBER
				&&!(invoker.weaponstatus[0]&ZM66F_CHAMBERBROKEN)
			,"cookoff");
			RIFG B 0 A_Refire();
		goto ready;


		flash:
			RIFF A 1 bright{
				A_Light1();
				HDFlashAlpha(-16);
				A_PlaySound("UaS/weapons/zm66k",CHAN_WEAPON, 0.9	);
				A_ZoomFactor(min(0.99,1.01-0.01*min(invoker.weaponstatus[ZM66S_AUTO],3)),
					ZOOM_INSTANT|ZOOM_NOSCALETURNING
				);

				//shoot the bullet
				//copypaste any changes to spawnshoot as well!
				actor bbb=spawn("HDBullet426",pos+(0,0,height-6),ALLOW_REPLACE);
				bbb.target=self;bbb.vel+=vel;bbb.pitch=pitch;bbb.angle=angle;
				double brnd=invoker.weaponstatus[ZM66S_HEAT]*0.02;
				if(brnd>0.12){
					bbb.angle=angle+frandom(-brnd,brnd);
					bbb.pitch=pitch+frandom(-brnd,brnd);
					bbb.speed-=brnd*100.;
				}
				bbb.speed*=0.6;

				A_MuzzleClimb(
					-frandom(0.1,0.1),-frandom(0,0.1),
					-0.2,-frandom(0.3,0.4),
					-frandom(0.4,1.4),-frandom(1.3,2.6)
				);

				invoker.weaponstatus[ZM66S_FLAGS]&=~ZM66F_CHAMBER;
				invoker.weaponstatus[ZM66S_HEAT]+=random(1,4);
				A_AlertMonsters();
			}
			RIFF A 0 A_ZoomFactor(1.0,ZOOM_INSTANT|ZOOM_NOSCALETURNING);
			goto lightdone;

	}
}

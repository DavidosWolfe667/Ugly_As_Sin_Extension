extend class UaS_TraumaKit {
	void HandleScalpel() {
		statusMessage = statusmessage.."\cjScalpel\n";
		statusMessage = statusmessage.."\cuFor re-opening wounds.\n\n\n";

		// Handle actions
		if (weaponstatus[TK_HOLD] > 0) { weaponstatus[TK_HOLD]--; }
		if ((owner.player.cmd.buttons & BT_ATTACK) && !(owner.player.oldbuttons & BT_ATTACK) && (weaponstatus[TK_HOLD] <= 0)){
			owner.A_StartSound("bandage/rip",CHAN_WEAPON);

			// CRAWWWWWWWWLLLLING INNNNNNNN MMMMYYYYYY SSSKKKKKIIIIIINNNNN
			// THEEEESSSSEE WOOOOUUUNNNDS THHHEEEEYYY WIILLL NOOOOTTTTT HEEEAAAAALLL
			if (!currentWound) {
				owner.A_StartSound("bandage/rip",CHAN_WEAPON);
				patient.damagemobj(owner,owner,5,"staples");
				patient.woundcount += 1;
				return;
			}

			if (currentWound.inpain(75)) {
				patient.damagemobj(owner,owner,1,"staples");
				weaponstatus[TK_HOLD] = 50;
				PainJolt();
			}
			else {
				weaponstatus[TK_HOLD] = 25;
			}
			patient.A_MuzzleClimb(
				(frandom[uas_tk](-1,1),frandom[uas_tk](1,4)),
				(frandom[uas_tk](-1,1),frandom[uas_tk](1,3)),
				(frandom[uas_tk](-1,1),frandom[uas_tk](1,2)),
				(frandom[uas_tk](-1,1),frandom[uas_tk](1,1))
			);
			currentWound.open = min(currentWound.open + random[uas_tk](5,100-currentWound.painkiller), 100);
			currentWound.cavity = min(currentWound.cavity + random[uas_tk](0,25-(currentWound.painkiller/4)), 100);
			return;
		}
	}
}

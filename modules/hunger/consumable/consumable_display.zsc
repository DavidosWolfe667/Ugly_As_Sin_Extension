extend class UaS_Consumable {
	void DoMessage() {
		string statusMessage;
		statusMessage.appendformat("--- \cc%s\c- ---\n", gettag());
		statusMessage.appendformat("%s\n", description);
		for (int i=1; i<=int(description.length()/40)+1; i++) { statusMessage.appendformat("\n"); }
		statusMessage.appendformat(DisplayFoodlist());
		statusMessage.appendformat(DisplayNutrition());
		if (bPACKAGED && weaponstatus[UGCS_OPEN] == UGCSF_SEALED) { statusMessage.appendformat("Package Closed\n"); }
		else { statusMessage.appendformat("\cw%.0f%% Remaining\n", ((weaponbulk()/bulk)*100) + max(diffbulk, 0)); }
		if (!tracker.mouthclear() && level.time % 10 != 0) { statusMessage.appendformat("Consuming..."); }
		A_WeaponMessage(statusMessage);
	}

	string DisplayFoodlist() {
		string r;
		if (FoodList.size() > 0) {
			r.appendformat("\cpContents\n");
			for (int i=0; i<NiceFoodList.size(); i++) { r.appendformat("\ce%s\n", NiceFoodList[i]); }
			r.appendformat("\n");
		}
		return r;
	}

	string DisplayNutrition() {
		string r;
		if (calories > 0 || fluid > 0) {
			r.appendformat(
				"\ce%i Calories\n"..
				"\ce%i mL Fluids\n\n",
				calories, fluid);
		}
		return r;
	}
}

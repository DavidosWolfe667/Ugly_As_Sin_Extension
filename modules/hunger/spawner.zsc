extend class UaS_Spawner {
	double spawnRate;
	vector3 spawnPos;
	array<string> FoodSpawnList;

	void BuildFoodSpawnList() {
		for (int i=0; i<allactorclasses.size(); i++) {
			bool valid = (
				(allactorclasses[i] is 'UaS_Consumable') &&
				(allactorclasses[i].GetClassName() != "UaS_Consumable")
			);
			if (valid) { FoodSpawnList.push(allactorclasses[i].GetClassName()); }
		}
	}

	//Set up spawns
	void HungerSpawns(WorldEvent e) {
		if(level.maptime > 1) { return; }
		if(!e.Thing) { return; }
		if(e.Thing is "Inventory" && Inventory(e.Thing).Owner) { return; }

		spawnPos = e.Thing.pos;

		if (FoodSpawnList.size() <= 0) { BuildFoodSpawnList(); }
		name toSpawnClass = FoodSpawnList[random(0,FoodSpawnList.size()-1)];

		//Spawn rations on backpacks
		if(e.Thing.GetClassName() == "HDBackpack") {
			MaybeSpawnRation(toSpawnClass, 1);
		}

		//Randomly spawn on ammo boxes
		else if(e.Thing.GetClassName() == "HDAmBox" || e.Thing.GetClassName() == "HDAmBoxUnarmed") {
			MaybeSpawnRation(toSpawnClass, 0.3);
		}

		//Randomly spawn on stimpacks
		else if(e.Thing.GetClassName() == "PortableStimpack") {
			MaybeSpawnRation(toSpawnClass, 0.1);
		}

		//Rarely spawn on medikits
		else if(e.Thing.GetClassName() == "PortableMedikit") {
			MaybeSpawnRation(toSpawnClass, 0.15);
		}

		//Randomly spawn on marine corpses
		else if(e.Thing.GetClassName() == "DeadRifleman" || e.Thing.GetClassName() == "ReallyDeadRifleman") {
			MaybeSpawnRation(toSpawnClass, 0.1);
		}
	}

	void MaybeSpawnRation(name spawnClass, double spawnChance) {
		if(UaS.RandomChance(clamp(spawnChance, 0, 1))) {
			UaS.SpawnStuff(spawnClass, 1, spawnPos);
			if(UaS_Debug & Hunger) { console.printf("Spawned Ration."); }
		}
	}
}

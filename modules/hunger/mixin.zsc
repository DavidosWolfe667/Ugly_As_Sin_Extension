mixin class UaS_FoodItemMixin {
	string description;
	string opensound;
	string openmessage1, openmessage2, openmessage3;
	property Description: description;
	property OpenMessage1: openmessage1;
	property OpenMessage2: openmessage2;
	property OpenMessage3: openmessage3;
	property OpenSound: opensound;
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	string RandomMessage() {
		int r = randompick[uas_hunger](1,2,3);
		switch(r) {
			case 1: return openmessage1; break;
			case 2: return openmessage1; break;
			case 3: return openmessage1; break;
		}
		return "";
	}

	States {
		Spawn:
			TNT1 A -1 { invoker.UpdateSprite(); }
			Stop;
		Ready:
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE);
			Loop;
	}

	override void BeginPlay() {
		UpdateSprite();
		super.BeginPlay();
	}

	void UpdateSprite() {
		string ic = TexMan.GetName(icon);
		string sp = ic.Left(4);
		string fr = ic.Mid(4, 1);
		sprite = GetSpriteIndex(sp);
		frame = (fr.ByteAt(0)-65);
	}

	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl) {
		vector2 mugsize = TexMan.GetScaledSize(sb.GetMugShot(5,Mugshot.CUSTOM,sb.getmug(hpl.mugshot)));
		sb.drawimage(TexMan.GetName(icon), (0, -14 - (mugsize.y * 1.25)),
			sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_ITEM_BOTTOM,
			scale:(2,2)
		);
	}
}

mixin class UaS_FoodItemMixin {
	string description;
	string opensound;
	array<string> OpenText;
	array<string> ConsumeText;
	property Description: description;
	property OpenSound: opensound;
	override bool AddSpareWeapon(actor newowner){return AddSpareWeaponRegular(newowner);}
	override hdweapon GetSpareWeapon(actor newowner,bool reverse,bool doselect){return GetSpareWeaponRegular(newowner,reverse,doselect);}

	//Override this for custom messages
	virtual void Messages() {}

	//Setters for text
	void AddOpenText(string msg) { OpenText.Push(msg); }
	void AddConsumeText(string msg) { ConsumeText.Push(msg); }

	string RandomOpenMessage() { return OpenText[random[uas_hunger](0,OpenText.Size()-1)]; }
	string RandomConsumeMessage() { return ConsumeText[random[uas_hunger](0,ConsumeText.Size()-1)]; }

	States {
		Spawn:
			TNT1 A -1 { invoker.UpdateSprite(); }
			Stop;
		Ready:
			TNT1 A 1 A_WeaponReady(WRF_NOFIRE);
			Loop;
	}

	override void BeginPlay() {
		UpdateSprite();
		//Some generic open messages
		AddOpenText("Let's see..");
		AddOpenText("Hope this is edible...");
		AddOpenText("Chow time!");
		//Process user's custom messages
		Messages();
		super.BeginPlay();
	}

	void UpdateSprite() {
		string ic = TexMan.GetName(icon);
		string sp = ic.Left(4);
		string fr = ic.Mid(4, 1);
		sprite = GetSpriteIndex(sp);
		frame = (fr.ByteAt(0)-65);
	}

	override void DrawHUDStuff(HDStatusBar sb,HDWeapon hdw,HDPlayerPawn hpl) {
		vector2 mugsize = TexMan.GetScaledSize(sb.GetMugShot(5,Mugshot.CUSTOM,sb.getmug(hpl.mugshot)));
		sb.drawimage(TexMan.GetName(icon), (0, -14 - (mugsize.y * 1.25)),
			sb.DI_SCREEN_CENTER_BOTTOM|sb.DI_ITEM_BOTTOM,
			scale:(2,2)
		);
	}
}
